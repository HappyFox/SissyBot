#:import joy_pad sissyBot.float_joy.JoyPad
#:import math math
#:import logPanel sissyBot.client.LogPanel

#:set my_color (0.5, 0.5, 0.5)
#:set my_color_hl (.5, .4, .5)
#:set outline_color (.2, .2, .2)



<RootWidget>:
    canvas.before:
        Color:
            rgb: my_color 
        Rectangle:
            pos: self.pos
            size: self.size
    Accordion:
        orientation: 'vertical'
        AccordionItem:
            title: 'Net Control'
            BoxLayout:
            #StackLayout:
                orientation: 'vertical'
                pos_hint: {'center_x':.5, 'center_y': .5}
                padding: 10

                TextInput:
                    multiline:False
                    height: self.minimum_height
                    text: app.config.get("robot", "address")
                    id: address_label
                    size_hint: [ 1, self.size_hint_min_y ]
                ToggleButton:
                    id: connect_btn
                    text: 'Connect'
                    on_press: app.net_con.connect(address_label.text, app.config.get("robot", "port"))
                    size_hint: [ 1, self.size_hint_min_y ]
        AccordionItem:
            title: 'Log'

            canvas.before:
                Color:
                    rgb: (0,0,0)
                Rectangle:
                    pos: self.pos
                    size: self.size
            ScrollView:
                LogPanel:
                    id:log
                    markup: True
                    height: self.texture_size[1]
                    text_size: self.width, None
                    size_hint_y: None
                    text: "Da Log!\n"
                    halign: 'left'
                    valign: 'top'
                    padding: [10,5]


    JoyPad:
        id: drive_pad
        trim: -math.pi / 2
        on_engage: app.drive_binding.on_engage(*args)
        on_move: app.drive_binding.on_move(*args)
        on_release: app.drive_binding.on_release(*args)
        canvas.before:
            Color:
                rgb: outline_color
            Line:
                rectangle: (self.x, self.y, self.width, self.height)


